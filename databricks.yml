bundle:
  name: terrametria

sync:
  include:
    - .build
  
artifacts:
  default:
    type: whl
    path: .
    build: hatch build -t wheel -c

variables:
  catalog:
    type: string
    description: The catalog name
    default: main
  schema:
    type: string
    description: The schema name
    default: default
  sql_warehouse:
    type: string
    description: The SQL warehouse to use

resources:
  jobs:
    terrametria:
      name: terrametria

      tasks:
        - task_key: main
          max_retries: 0
          disable_auto_optimization: true
          python_wheel_task:
            package_name: terrametria
            entry_point: loader
            parameters:
              - ${var.catalog}
              - ${var.schema}

          environment_key: Default

      environments:
        - environment_key: Default
          spec:
            client: "1"
            dependencies:
              - ./dist/*.whl

  apps:
    terrametria-app:
      name: "terrametria"
      description: "Hi-res 3d population visualization"
      source_code_path: ./.build
      config:
        command: ["uvicorn", "terrametria.backend:app"]

        env:
          - name: "TERRAMETRIA_CATALOG"
            value: "ivt"
          - name: "TERRAMETRIA_SCHEMA"
            value: "terrametria"
          - name: "DATABRICKS_SQL_WAREHOUSE_ID"
            valueFrom: "sql_warehouse" # resource key

      resources:
        - name: "sql_warehouse"
          description: The SQL warehouse to use
          sql_warehouse:
            id: ${var.sql_warehouse}
            permission: "CAN_USE"
    
targets:
  dev:
    # The default target uses 'mode: development' to create a development copy.
    # - Deployed resources get prefixed with '[dev my_user_name]'
    # - Any job schedules and triggers are paused by default.
    # See also https://docs.databricks.com/dev-tools/bundles/deployment-modes.html.
    mode: development
    default: true